; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = basic
src_dir = ./

[env]
platform = atmelavr
framework = arduino
board = uno
build_flags =
    -std=c++17
    -std=gnu++17
build_unflags =
    -std=gnu++11
extra_scripts = pre:inject_sketch_name.py
check_tool = clangtidy
check_flags =
    clangtidy: --fix --checks=*,-llvmlibc-callee-namespace,-llvmlibc-implementation-in-namespace,-clang-diagnostic-c++17-extensions
monitor_filters =
    default   ; Remove typical terminal control codes from input
    time      ; Add timestamp with milliseconds for each new line
    log2file  ; Log data to a file “platformio-device-monitor-*.log” located in the current working directory

[env:basic]

[env:temperature]
build_src_flags =
    -DTEMP_ENABLED
lib_deps =
    paulstoffregen/OneWire @ ^2.3.7

[env:emonesp]
build_src_flags =
    -DEMONESP

[env:emonesp_temperature]
extends = env:temperature
build_src_flags =
    ${env:temperature.build_src_flags}
    -DEMONESP

[env:rf]
build_src_flags =
    -DRF_PRESENT
lib_deps = 
    JeeLib

[env:rotation]
build_src_flags =
    -DPRIORITY_ROTATION

[env:dual_tariff]
build_src_flags =
    -DOFF_PEAK_TARIFF

[env:dual_tariff_rotation]
build_src_flags =
    ${env:rotation.build_src_flags}
    ${env:dual_tariff.build_src_flags}

[env:override]
build_src_flags =
    -DFORCE_PIN_PRESENT

